{"version":3,"file":"static/js/79.51c15a17.chunk.js","mappings":"0KAIAA,IAAAA,cAAoB,UAQpB,IAYA,EAZqC,SAAHC,GAAyC,IAAnCC,EAAMD,EAANC,OAAQC,EAAQF,EAARE,SAAUC,EAASH,EAATG,UACxD,OACEC,EAAAA,EAAAA,KAACL,IAAK,CAACM,UAAU,QAAQC,iBAAiB,iBAAiBL,OAAQA,EAAOM,UACxEC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gBAAeE,SAAA,EAC5BH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaE,SAAC,sBAC5BH,EAAAA,EAAAA,KAAA,UAAQC,UAAU,aAAaI,QAASP,EAASK,SAAC,gBAClDH,EAAAA,EAAAA,KAAA,UAAQC,UAAU,aAAaI,QAASN,EAAUI,SAAC,eAI3D,C,+LCTMG,GAA2BC,EAAAA,EAAAA,KAAS,WAAO,IAADC,EAAAC,EAC9CC,GAAsCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAC5BI,GAAWC,EAAAA,EAAAA,MACjBC,GAAuCP,EAAAA,EAAAA,eACrCQ,GACDC,GAAAP,EAAAA,EAAAA,GAAAK,EAAA,GAFMG,EAAYD,EAAA,GAAEE,EAAcF,EAAA,GAG7BG,GAAWC,EAAAA,EAAAA,MACTC,GAAcC,EAAAA,EAAAA,MAAdD,UA2BFE,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOP,GAAiB,IAAAQ,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEhB,OAFgBF,EAAAC,KAAA,EAE3CE,EAAAA,EAAAA,cAAqB,GAAMH,EAAAE,KAAA,GACgCE,EAAAA,EAAAA,IACzDd,GACA,KAAD,EAFKQ,EAA4CE,EAAAK,KAGlDlB,EAAeW,GAAqBE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEpCG,EAAAA,EAAAA,SAAiBH,EAAAM,GAAMC,SAAS,QAEJ,OAFIP,EAAAC,KAAA,GAEhCE,EAAAA,EAAAA,cAAqB,GAAOH,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAZ,EAAA,wBAE/B,gBAZmBa,GAAA,OAAAjB,EAAAkB,MAAA,KAAAC,UAAA,KAkBpB,OAJAC,EAAAA,EAAAA,YAAU,WACRrB,EAAesB,OAAOxB,GACxB,GAAG,CAACA,KAGFrB,EAAAA,EAAAA,MAAA8C,EAAAA,SAAA,CAAA/C,SAAA,EACEH,EAAAA,EAAAA,KAACmD,EAAAA,GAAI,CAAClD,UAAU,mBAAmBmD,GAAyB,QAAvB5C,EAAU,OAARe,QAAQ,IAARA,GAAe,QAAPd,EAARc,EAAU8B,aAAK,IAAA5C,OAAP,EAARA,EAAiB6C,YAAI,IAAA9C,EAAAA,EAAI,IAAIL,SAAC,YAIpEmC,EAAAA,EAAAA,YAAqBtC,EAAAA,EAAAA,KAACuD,EAAAA,EAAM,KAE7BvD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASE,UACtBC,EAAAA,EAAAA,MAAA,MAAIH,UAAU,gBAAeE,SAAA,CAAC,IAAc,OAAZkB,QAAY,IAAZA,OAAY,EAAZA,EAAcmC,KAAK,UAGrDxD,EAAAA,EAAAA,KAACmD,EAAAA,GAAI,CAAClD,UAAU,kBAAkBmD,GAAI,aAAajD,SAAC,YAIpDH,EAAAA,EAAAA,KAAA,UACEC,UAAU,kBACVwD,KAAK,SACLpD,QA9DsB,WAC1BU,GAAe,EACjB,EA4DmCZ,SAC9B,YAIDH,EAAAA,EAAAA,KAAC0D,EAAAA,EAAW,CACV7D,OAAQiB,EACRhB,SAjEe,WACnBiB,GAAe,EACjB,EAgEMhB,UA9DsB,YAC1B,eAAAH,GAAAiC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAA4B,EAAOlC,GAAiB,IAAAmC,EAAA,OAAA9B,EAAAA,EAAAA,KAAAI,MAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,OAEM,OAFNwB,EAAAzB,KAAA,EAErBE,EAAAA,EAAAA,cAAqB,GAAMuB,EAAAxB,KAAA,GACJyB,EAAAA,EAAAA,IAAkBrC,GAAW,KAAD,EAA7CmC,EAAQC,EAAArB,KACduB,QAAQC,IAAIJ,GAAUC,EAAAxB,KAAA,gBAAAwB,EAAAzB,KAAA,EAAAyB,EAAApB,GAAAoB,EAAA,SAEtBvB,EAAAA,EAAAA,SAAiBuB,EAAApB,GAAMC,SAAS,QAGlB,OAHkBmB,EAAAzB,KAAA,GAEhCE,EAAAA,EAAAA,cAAqB,GACrBtB,EAAS,KAAK6C,EAAAlB,OAAA,6BAAAkB,EAAAjB,OAAA,GAAAe,EAAA,wBAEjB,gBAAAM,GAAA,OAAArE,EAAAkD,MAAA,KAAAC,UAAA,EAXD,GAWGE,OAAOxB,IAEVV,GAAe,EACjB,MAmDF,IAEA,G","sources":["components/IsSureModal/IsSureModal.tsx","pages/ProjectDetails/ProjectDetails.tsx"],"sourcesContent":["import { FC } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport \"./IsSureModal.scss\";\r\n\r\nModal.setAppElement(\"#modal\");\r\n\r\ninterface IModalProps {\r\n  isOpen: boolean;\r\n  onCancel: () => void;\r\n  onConfirm: () => void;\r\n}\r\n\r\nconst IsSureModal: FC<IModalProps> = ({ isOpen, onCancel, onConfirm }) => {\r\n  return (\r\n    <Modal className=\"modal\" overlayClassName=\"modal__overlay\" isOpen={isOpen}>\r\n      <div className=\"modal-content\">\r\n        <h2 className=\"modal__info\">confirm deletion</h2>\r\n        <button className=\"modal__btn\" onClick={onCancel}>no no no!!</button>\r\n        <button className=\"modal__btn\" onClick={onConfirm}>delete</button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default IsSureModal;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ProjectType } from \"../../utils/types/project\";\r\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n  deleteProjectById,\r\n  getProjectById,\r\n} from \"../../utils/services/companyAPI\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport company from \"../../utils/stores/company\";\r\nimport \"./ProjectDetails.scss\";\r\nimport IsSureModal from \"../../components/IsSureModal/IsSureModal\";\r\n\r\nconst ProjectDetails: React.FC = observer(() => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [projecttInfo, setProjectInfo] = useState<ProjectType | undefined>(\r\n    undefined\r\n  );\r\n  const location = useLocation();\r\n  const { projectId } = useParams();\r\n\r\n  const handleDeleteProject = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleConfirmDelete = () => {\r\n    (async (projectId: number) => {\r\n      try {\r\n        company.setIsLoading(true);\r\n        const response = await deleteProjectById(projectId);\r\n        console.log(response);\r\n      } catch (error: any) {\r\n        company.setError(error.message);\r\n      } finally {\r\n        company.setIsLoading(false);\r\n        navigate(\"/\");\r\n      }\r\n    })(Number(projectId));\r\n\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const getProjectInfo = async (projectId: number) => {\r\n    try {\r\n      company.setIsLoading(true);\r\n      const receivedProjectInfo: ProjectType | undefined = await getProjectById(\r\n        projectId\r\n      );\r\n      setProjectInfo(receivedProjectInfo);\r\n    } catch (error: any) {\r\n      company.setError(error.message);\r\n    } finally {\r\n      company.setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProjectInfo(Number(projectId));\r\n  }, [projectId]);\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"project__go-back\" to={location?.state?.from ?? \"/\"}>\r\n        GO BACK\r\n      </Link>\r\n\r\n      {company.isLoading && <Loader />}\r\n\r\n      <div className=\"project\">\r\n        <h2 className=\"project__name\"> {projecttInfo?.name} </h2>\r\n      </div>\r\n\r\n      <Link className=\"project__update\" to={\"updateproj\"}>\r\n        UPDATE\r\n      </Link>\r\n\r\n      <button\r\n        className=\"project__delete\"\r\n        type=\"submit\"\r\n        onClick={handleDeleteProject}\r\n      >\r\n        DELETE\r\n      </button>\r\n\r\n      <IsSureModal\r\n        isOpen={isModalOpen}\r\n        onCancel={handleCancel}\r\n        onConfirm={handleConfirmDelete}\r\n      />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default ProjectDetails;\r\n"],"names":["Modal","_ref","isOpen","onCancel","onConfirm","_jsx","className","overlayClassName","children","_jsxs","onClick","ProjectDetails","observer","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","navigate","useNavigate","_useState3","undefined","_useState4","projecttInfo","setProjectInfo","location","useLocation","projectId","useParams","getProjectInfo","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","receivedProjectInfo","wrap","_context2","prev","next","company","getProjectById","sent","t0","message","finish","stop","_x2","apply","arguments","useEffect","Number","_Fragment","Link","to","state","from","Loader","name","type","IsSureModal","_callee","response","_context","deleteProjectById","console","log","_x"],"sourceRoot":""}