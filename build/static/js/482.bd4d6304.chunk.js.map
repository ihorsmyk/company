{"version":3,"file":"static/js/482.bd4d6304.chunk.js","mappings":"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","sources":["pages/UpdateProjectPage/UpdateProjectPage.tsx"],"sourcesContent":["import { observer } from \"mobx-react-lite\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport company from \"../../utils/stores/company\";\r\nimport { ProjectType } from \"../../utils/types/project\";\r\nimport {\r\n  getProjectById,\r\n  updateProjectById,\r\n} from \"../../utils/services/companyAPI\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport \"./UpdateProjectPage.scss\";\r\n\r\nconst UpdateProjectPage: React.FC = observer(() => {\r\n  const navigate = useNavigate();\r\n  const [projectInfo, setProjectInfo] = useState<any>({\r\n    name: \"\",\r\n  });\r\n\r\n  const { projectId } = useParams();\r\n\r\n  const getProjectInfo = async (projectId: number) => {\r\n    try {\r\n      company.setIsLoading(true);\r\n      const receivedProjectInfo: ProjectType = await getProjectById(projectId);\r\n      const info = {\r\n        name: receivedProjectInfo.name,\r\n      };\r\n      setProjectInfo(info);\r\n    } catch (error: any) {\r\n      company.setError(error.message);\r\n    } finally {\r\n      company.setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateProjectInfo = async (projectId: number, projectInfo: any) => {\r\n    try {\r\n      company.setIsLoading(true);\r\n      const response = await updateProjectById(projectId, projectInfo);\r\n      console.log(response);\r\n    } catch (error: any) {\r\n      company.setError(error.message);\r\n    } finally {\r\n      company.setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProjectInfo(Number(projectId));\r\n  }, [projectId]);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    console.log(e.target);\r\n    const { name, value } = e.target;\r\n    setProjectInfo((prev: any) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    updateProjectInfo(Number(projectId), projectInfo);\r\n    company.cleanProjectList();\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"project__go-back\" to={\"/projects\"}>\r\n        CANCEL\r\n      </Link>\r\n\r\n      {company.isLoading && <Loader />}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          project name:\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={projectInfo?.name}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">update</button>\r\n      </form>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default UpdateProjectPage;\r\n"],"names":["UpdateProjectPage","observer","navigate","useNavigate","_useState","useState","name","_useState2","_slicedToArray","projectInfo","setProjectInfo","projectId","useParams","getProjectInfo","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","receivedProjectInfo","info","wrap","_context","prev","next","company","getProjectById","sent","t0","message","finish","stop","_x","apply","arguments","updateProjectInfo","_ref2","_callee2","response","_context2","updateProjectById","console","log","_x2","_x3","useEffect","Number","_jsxs","_Fragment","children","_jsx","Link","className","to","Loader","onSubmit","e","preventDefault","type","id","value","onChange","target","_e$target","_objectSpread","_defineProperty"],"sourceRoot":""}