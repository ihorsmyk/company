{"version":3,"file":"static/js/152.f7c33d4a.chunk.js","mappings":"iTAcMA,GAA+BC,EAAAA,EAAAA,KAAS,WAC5C,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAAwCC,EAAAA,EAAAA,UAAc,CACpDC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,SAAUC,EAAAA,EAAAA,WACVC,GAAAC,EAAAA,EAAAA,GAAAR,EAAA,GALKS,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAO5BI,GAAeC,EAAAA,EAAAA,MAAfD,WAEFE,EAAe,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOP,GAAkB,IAAAQ,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAElB,OAFkBF,EAAAC,KAAA,EAE7CE,EAAAA,EAAAA,cAAqB,GAAMH,EAAAE,KAAA,GACsBE,EAAAA,EAAAA,IAC/Cf,GACA,KAAD,EAFKQ,EAAkCG,EAAAK,KAGlCP,EAAO,CACXlB,UAAWiB,EAAqBjB,UAChCC,SAAUgB,EAAqBhB,SAC/BC,MAAOe,EAAqBf,MAC5BC,SAAUc,EAAqBd,UAEjCK,EAAgBU,GAAME,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEtBG,EAAAA,EAAAA,SAAiBH,EAAAM,GAAMC,SAAS,QAEJ,OAFIP,EAAAC,KAAA,GAEhCE,EAAAA,EAAAA,cAAqB,GAAOH,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAb,EAAA,wBAE/B,gBAlBoBc,GAAA,OAAAlB,EAAAmB,MAAA,KAAAC,UAAA,KAoBfC,EAAkB,eAAAC,GAAArB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAoB,EAAO1B,EAAoBF,GAAiB,OAAAO,EAAAA,EAAAA,KAAAK,MAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,OAExC,OAFwCc,EAAAf,KAAA,EAEnEE,EAAAA,EAAAA,cAAqB,GAAMa,EAAAd,KAAA,GACJe,EAAAA,EAAAA,IAAmB5B,EAAYF,GAAc,KAAD,EAC3C,MADV6B,EAAAX,KACDa,QACXC,EAAAA,GAAAA,QAAc,uBAAwB,CACpCC,UAAW,MAEdJ,EAAAd,KAAA,gBAAAc,EAAAf,KAAA,EAAAe,EAAAV,GAAAU,EAAA,SAEDb,EAAAA,EAAAA,SAAiBa,EAAAV,GAAMC,SAAS,QAEJ,OAFIS,EAAAf,KAAA,GAEhCE,EAAAA,EAAAA,cAAqB,GAAOa,EAAAR,OAAA,6BAAAQ,EAAAP,OAAA,GAAAM,EAAA,wBAE/B,gBAduBM,EAAAC,GAAA,OAAAR,EAAAH,MAAA,KAAAC,UAAA,MAgBxBW,EAAAA,EAAAA,YAAU,WACRhC,EAAgBiC,OAAOnC,GACzB,GAAG,CAACA,IAEJ,IAAMoC,EAAe,SAACC,GACpB,IAAAC,EAAwBD,EAAEE,OAAlBC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACd1C,GAAgB,SAACa,GAAS,OAAA8B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW9B,GAAI,IAAA+B,EAAAA,EAAAA,GAAA,GAAGH,EAAOC,GAAK,GAC1D,EASA,OACEG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,UAAU,oBAAoBC,GAAI,aAAaJ,SAAC,WAIrDhC,EAAAA,EAAAA,YAAqBiC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,KAE7BP,EAAAA,EAAAA,MAAA,QAAMQ,SAfW,SAACf,GACpBA,EAAEgB,iBACF7B,EAAmBW,OAAOnC,GAAaF,GACvCgB,EAAAA,EAAAA,oBACA3B,EAAS,IACX,EAUiC2D,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,eAELC,EAAAA,EAAAA,KAAA,SACEO,KAAK,OACLC,GAAG,YACHf,KAAK,YACLC,MAAmB,OAAZ3C,QAAY,IAAZA,OAAY,EAAZA,EAAcP,UACrBiE,SAAUpB,QAGdQ,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,cAELC,EAAAA,EAAAA,KAAA,SACEO,KAAK,OACLC,GAAG,WACHf,KAAK,WACLC,MAAmB,OAAZ3C,QAAY,IAAZA,OAAY,EAAZA,EAAcN,SACrBgE,SAAUpB,QAGdQ,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,UAELC,EAAAA,EAAAA,KAAA,SACEO,KAAK,QACLC,GAAG,QACHf,KAAK,QACLC,MAAmB,OAAZ3C,QAAY,IAAZA,OAAY,EAAZA,EAAcL,MACrB+D,SAAUpB,QAGdQ,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,aAELF,EAAAA,EAAAA,MAAA,UACEK,UAAU,GACVM,GAAG,WACHf,KAAK,WACLC,MAAmB,OAAZ3C,QAAY,IAAZA,OAAY,EAAZA,EAAcJ,SACrB8D,SAAUpB,EAAaU,SAAA,EAEvBC,EAAAA,EAAAA,KAAA,UAAQN,MAAO9C,EAAAA,EAAAA,SAAkBmD,SAAC,cAClCC,EAAAA,EAAAA,KAAA,UAAQN,MAAO9C,EAAAA,EAAAA,QAAiBmD,SAAC,aACjCC,EAAAA,EAAAA,KAAA,UAAQN,MAAO9C,EAAAA,EAAAA,OAAgBmD,SAAC,YAChCC,EAAAA,EAAAA,KAAA,UAAQN,MAAO9C,EAAAA,EAAAA,QAAiBmD,SAAC,aACjCC,EAAAA,EAAAA,KAAA,UAAQN,MAAO9C,EAAAA,EAAAA,GAAYmD,SAAC,cAGhCC,EAAAA,EAAAA,KAAA,UAAQO,KAAK,SAAQR,SAAC,gBAI9B,IAEA,G,uDC1IO,IAAKnD,EAAQ,SAARA,GAAQ,OAARA,EAAAA,EAAQ,uBAARA,EAAAA,EAAQ,qBAARA,EAAAA,EAAQ,mBAARA,EAAAA,EAAQ,qBAARA,EAAAA,EAAQ,WAARA,CAAQ,K","sources":["pages/UpdateEmployeePage/UpdateEmployeePage.tsx","utils/enums/position.ts"],"sourcesContent":["import { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { EmployeeType } from \"../../utils/types/employee\";\r\nimport {\r\n  getEmployeeById,\r\n  updateEmployeeById,\r\n} from \"../../utils/services/companyAPI\";\r\nimport company from \"../../utils/stores/company\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport { Position } from \"../../utils/enums/position\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"./UpdateEmployeePage.scss\";\r\n\r\nconst UpdateEmployeePage: React.FC = observer(() => {\r\n  const navigate = useNavigate();\r\n  const [employeeInfo, setEmployeeInfo] = useState<any>({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    position: Position.FRONTEND,\r\n  });\r\n\r\n  const { employeeId } = useParams();\r\n\r\n  const getEmployeeInfo = async (employeeId: number) => {\r\n    try {\r\n      company.setIsLoading(true);\r\n      const receivedEmployeeInfo: EmployeeType = await getEmployeeById(\r\n        employeeId\r\n      );\r\n      const info = {\r\n        firstName: receivedEmployeeInfo.firstName,\r\n        lastName: receivedEmployeeInfo.lastName,\r\n        email: receivedEmployeeInfo.email,\r\n        position: receivedEmployeeInfo.position,\r\n      };\r\n      setEmployeeInfo(info);\r\n    } catch (error: any) {\r\n      company.setError(error.message);\r\n    } finally {\r\n      company.setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateEmployeeInfo = async (employeeId: number, employeeInfo: any) => {\r\n    try {\r\n      company.setIsLoading(true);\r\n      const response = await updateEmployeeById(employeeId, employeeInfo);\r\n      if (response.status === 200) {\r\n        toast.success(\"updated successfully\", {\r\n          autoClose: 2000,\r\n        });\r\n      }\r\n    } catch (error: any) {\r\n      company.setError(error.message);\r\n    } finally {\r\n      company.setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEmployeeInfo(Number(employeeId));\r\n  }, [employeeId]);\r\n\r\n  const handleChange = (e: any) => {\r\n    const { name, value } = e.target;\r\n    setEmployeeInfo((prev: any) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    updateEmployeeInfo(Number(employeeId), employeeInfo);\r\n    company.cleanEmployeeList();\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"employee__go-back\" to={\"/employees\"}>\r\n        CANCEL\r\n      </Link>\r\n\r\n      {company.isLoading && <Loader />}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          first name:\r\n          <input\r\n            type=\"text\"\r\n            id=\"firstName\"\r\n            name=\"firstName\"\r\n            value={employeeInfo?.firstName}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          last name:\r\n          <input\r\n            type=\"text\"\r\n            id=\"lastName\"\r\n            name=\"lastName\"\r\n            value={employeeInfo?.lastName}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          email:\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={employeeInfo?.email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          position:\r\n          <select\r\n            className=\"\"\r\n            id=\"position\"\r\n            name=\"position\"\r\n            value={employeeInfo?.position}\r\n            onChange={handleChange}\r\n          >\r\n            <option value={Position.FRONTEND}>frontend</option>\r\n            <option value={Position.BACKEND}>backend</option>\r\n            <option value={Position.DEVOPS}>devops</option>\r\n            <option value={Position.MANAGER}>manager</option>\r\n            <option value={Position.HR}>HR</option>\r\n          </select>\r\n        </label>\r\n        <button type=\"submit\">Update</button>\r\n      </form>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default UpdateEmployeePage;\r\n","export enum Position {\r\n  FRONTEND,\r\n  BACKEND,\r\n  DEVOPS,\r\n  MANAGER,\r\n  HR,\r\n}\r\n"],"names":["UpdateEmployeePage","observer","navigate","useNavigate","_useState","useState","firstName","lastName","email","position","Position","_useState2","_slicedToArray","employeeInfo","setEmployeeInfo","employeeId","useParams","getEmployeeInfo","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","receivedEmployeeInfo","info","wrap","_context","prev","next","company","getEmployeeById","sent","t0","message","finish","stop","_x","apply","arguments","updateEmployeeInfo","_ref2","_callee2","_context2","updateEmployeeById","status","toast","autoClose","_x2","_x3","useEffect","Number","handleChange","e","_e$target","target","name","value","_objectSpread","_defineProperty","_jsxs","_Fragment","children","_jsx","Link","className","to","Loader","onSubmit","preventDefault","type","id","onChange"],"sourceRoot":""}