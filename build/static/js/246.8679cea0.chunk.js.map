{"version":3,"file":"static/js/246.8679cea0.chunk.js","mappings":"+PAQMA,GAA6BC,EAAAA,EAAAA,KAAS,WAAO,IAADC,EAC1CC,GAAWC,EAAAA,EAAAA,MACjBC,GAAwBC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAEdI,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOP,GAAY,OAAAK,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAER,OAFQF,EAAAC,KAAA,EAEnCE,EAAAA,EAAAA,cAAqB,GAAMH,EAAAE,KAAA,EACrBC,EAAAA,EAAAA,cAAsBZ,GAAM,KAAD,EAAAS,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAEjCG,EAAAA,EAAAA,SAAiBH,EAAAI,GAAMC,SAAS,OAEJ,OAFIL,EAAAC,KAAA,EAEhCE,EAAAA,EAAAA,cAAqB,GAAOH,EAAAM,OAAA,4BAAAN,EAAAO,OAAA,GAAAT,EAAA,uBAE/B,gBATgBU,GAAA,OAAAd,EAAAe,MAAA,KAAAC,UAAA,MAWjBC,EAAAA,EAAAA,YAAU,WACRlB,EAAYF,EACd,GAAG,CAACA,IAMJ,OACEqB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGX,EAAAA,EAAAA,YAAqBY,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KAC7BD,EAAAA,EAAAA,KAAA,MAAIE,UAAU,eAAcH,SACN,QADM9B,EACzBmB,EAAAA,EAAAA,mBAAmB,IAAAnB,OAAA,EAAnBA,EAAqBkC,KAAI,SAACC,GACzB,OACEJ,EAAAA,EAAAA,KAAA,MAAeE,UAAU,qBAAoBH,UAC3CC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CACHC,MAAO,CAAEC,KAAMrC,GACfsC,GAAIC,OAAOL,EAAEM,IACbR,UAAU,qBAAoBH,UAE9BF,EAAAA,EAAAA,MAAA,MAAIK,UAAU,qBAAoBH,SAAA,CAAC,IAAEK,EAAEO,KAAK,UANvCP,EAAEM,GAUf,MAGDtB,EAAAA,EAAAA,YAAAA,OAA6BA,EAAAA,EAAAA,gBAC5BY,EAAAA,EAAAA,KAAA,UAAQE,UAAU,qBAAqBU,QAxBpB,WACvBnC,GAAQ,SAACS,GAAI,OAAKA,EAAO,CAAC,GAC5B,EAsBuEa,SAAC,gBAM1E,IAEA,G","sources":["pages/ProjectsListPage/ProjectsListPage.tsx"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport company from \"../../utils/stores/company\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport { ProjectType } from \"../../utils/types/project\";\r\nimport \"./ProjectsListPage.scss\";\r\n\r\nconst ProjectsListPage: React.FC = observer(() => {\r\n  const location = useLocation();\r\n  const [page, setPage] = useState(0);\r\n\r\n  const getProjects = async (page: number) => {\r\n    try {\r\n      company.setIsLoading(true);\r\n      await company.fetchProjects(page);\r\n    } catch (error: any) {\r\n      company.setError(error.message);\r\n    } finally {\r\n      company.setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProjects(page);\r\n  }, [page]);\r\n\r\n  const handleChangePage = () => {\r\n    setPage((prev) => prev + 1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {company.isLoading && <Loader />}\r\n      <ul className=\"project-list\">\r\n        {company.projectList?.map((p: ProjectType) => {\r\n          return (\r\n            <li key={p.id} className=\"project-list__item\">\r\n              <Link\r\n                state={{ from: location }}\r\n                to={String(p.id)}\r\n                className=\"project-list__link\"\r\n              >\r\n                <h2 className=\"project-list__name\"> {p.name} </h2>\r\n              </Link>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n\r\n      {company.projectList.length < company.totalProjects && (\r\n        <button className=\"project-list__more\" onClick={handleChangePage}>\r\n          LOAD MORE\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default ProjectsListPage;\r\n"],"names":["ProjectsListPage","observer","_company$projectList","location","useLocation","_useState","useState","_useState2","_slicedToArray","page","setPage","getProjects","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","company","t0","message","finish","stop","_x","apply","arguments","useEffect","_jsxs","_Fragment","children","_jsx","Loader","className","map","p","Link","state","from","to","String","id","name","onClick"],"sourceRoot":""}